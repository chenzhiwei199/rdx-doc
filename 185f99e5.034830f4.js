(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{122:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return g})),n.d(t,"metadata",(function(){return j})),n.d(t,"toc",(function(){return y})),n.d(t,"default",(function(){return S}));var o={};n.r(o),n.d(o,"Root",(function(){return v}));var a=n(3),u=n(7),s=n(0),r=n.n(s),c=n(186),i=n(206),l=n(599),d=n(603),m=n(533),p=n(839),x=n(833),R=function(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var o,a,u=n.call(e),s=[];try{for(;(void 0===t||t-- >0)&&!(o=u.next()).done;)s.push(o.value)}catch(r){a={error:r}}finally{try{o&&!o.done&&(n=u.return)&&n.call(u)}finally{if(a)throw a.error}}return s},b=Object(l.a)({id:"atom",defaultValue:1}),f=Object(d.b)({id:"compute",get:function(e){var t=e.get;return 10*t(b)},set:function(e,t){var n=e.set;Object(m.c)(t)?n(b,100):n(b,t)}}),v=function(){return r.a.createElement(p.a,null,r.a.createElement(C,null))},C=function(){var e=R(Object(x.g)(b),2),t=e[0],n=e[1],o=R(Object(x.g)(f),2),a=o[0],u=o[1],s=Object(x.e)(b),c=Object(x.e)(f);return r.a.createElement("span",{style:{display:"inline-flex",justifyContent:"space-around"}},r.a.createElement("div",null,"Atom:"," ",r.a.createElement("input",{value:t,onChange:function(e){return n(e.target.value)}}),"Compute:"," ",r.a.createElement("input",{value:a,onChange:function(e){return u(e.target.value)}})),r.a.createElement("button",{onClick:function(){s()}},"\u91cd\u7f6eAtom"),r.a.createElement("button",{onClick:function(){c()}},"\u91cd\u7f6eCompute"))},g={id:"useRdxReset",title:"useRdxReset(state)"},j={unversionedId:"api/useRdxReset",id:"api/useRdxReset",isDocsHomePage:!1,title:"useRdxReset(state)",description:"\u4f1a\u6839\u636e\u5f53\u524d\u4f20\u5165\u7684state\u53c2\u6570\u6765\u8fd4\u4e00\u4e2a\u51fd\u6570\uff0c\u5982\u679cstate \u662f\u4e00\u4e2aatom\uff0c\u5219\u8c03\u7528\u8be5\u51fd\u6570\u5c06\u72b6\u6001\u91cd\u7f6e\u4e3a\u9ed8\u8ba4\u503c\uff0c\u5982\u679c\u662f\u4e00\u4e2acompute\uff0c\u5219\u4f1a",source:"@site/docs/api/useRdxReset.mdx",slug:"/api/useRdxReset",permalink:"/rdx-doc/docs/api/useRdxReset",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/api/useRdxReset.mdx",version:"current",sidebar:"someSidebar",previous:{title:"useRdxSetter(state)",permalink:"/rdx-doc/docs/api/useRdxSetter"},next:{title:"useRdxRefresh(state)",permalink:"/rdx-doc/docs/api/useRdxRefresh"}},y=[],O={toc:y};function S(e){var t=e.components,n=Object(u.a)(e,["components"]);return Object(c.b)("wrapper",Object(a.a)({},O,n,{components:t,mdxType:"MDXLayout"}),Object(c.b)("p",null,"\u4f1a\u6839\u636e\u5f53\u524d\u4f20\u5165\u7684state\u53c2\u6570\u6765\u8fd4\u4e00\u4e2a\u51fd\u6570\uff0c\u5982\u679cstate \u662f\u4e00\u4e2aatom\uff0c\u5219\u8c03\u7528\u8be5\u51fd\u6570\u5c06\u72b6\u6001\u91cd\u7f6e\u4e3a\u9ed8\u8ba4\u503c\uff0c\u5982\u679c\u662f\u4e00\u4e2acompute\uff0c\u5219\u4f1a\n\u8c03\u7528compute\u7684set\u65b9\u6cd5\uff0c\u5e76\u4f20\u5165DEFAULT_VALUE\u3002"),Object(c.b)("hr",null),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-jsx"}),"function useRdxReset<GModel>(state: RdxState<GModel>): () => void\n")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},"state: \u53ef\u662f\u662f\u4e00\u4e2a atom \u6216\u8005\u662f\u4e00\u4e2a compute.")),Object(c.b)(i.a,{code:"import React from 'react';\nimport {\n  atom,\n  useRdxSetter,\n  RdxContext,\n  useRdxState,\n  compute,\n  isLoading,\n  isDefaultValue,\n  useRdxReset,\n} from '@alife/rdx';\n\nconst Atom = atom({\n  id: 'atom',\n  defaultValue: 1,\n});\n\nconst Compute = compute({\n  id: 'compute',\n  get: ({ get }) => {\n    return get(Atom) * 10;\n  },\n  set: ({ set }, newValue) => {\n    if (isDefaultValue(newValue)) {\n      set(Atom, 100);\n    } else {\n      set(Atom, newValue);\n    }\n  },\n});\nexport const Root = () => {\n  return (\n    <RdxContext>\n      <Counter />\n    </RdxContext>\n  );\n};\n\nconst Counter = () => {\n  const [state, setState] = useRdxState(Atom);\n  const [computeState, setComputeState] = useRdxState(Compute);\n  const reset = useRdxReset(Atom);\n  const resetCompute = useRdxReset(Compute);\n  return (\n    <span style={{ display: 'inline-flex', justifyContent: 'space-around' }}>\n      <div>\n        Atom:{' '}\n        <input\n          value={state}\n          onChange={(event: any) => setState(event.target.value)}\n        />\n        Compute:{' '}\n        <input\n          value={computeState}\n          onChange={(event: any) => setComputeState(event.target.value)}\n        />\n      </div>\n      <button\n        onClick={() => {\n          reset();\n        }}\n      >\n        \u91cd\u7f6eAtom\n      </button>\n      <button\n        onClick={() => {\n          resetCompute();\n        }}\n      >\n        \u91cd\u7f6eCompute\n      </button>\n    </span>\n  );\n};\n",example:o,mdxType:"ExampleCustomizer"}))}S.isMDXComponent=!0}}]);